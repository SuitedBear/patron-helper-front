{"version":3,"sources":["components/loginForm.js","components/signupForm.js","components/menu.js","pages/userEdit.js","pages/serviceList.js","components/tables/dataRow.js","components/tables/formFieldTypes.js","components/tables/editRow.js","components/tables/filters.js","components/tables/dataView.js","pages/levels.js","pages/patrons.js","pages/todos.js","pages/service.js","pages/userPanel.js","app.js","index.js"],"names":["LoginForm","props","state","email","password","handleChange","bind","event","preventDefault","loginData","this","onLogin","setState","target","id","value","failedLogin","style","color","handleFailedLogin","onSubmit","e","handleSubmit","htmlFor","name","type","onChange","onClick","onStateChange","React","Component","SignupForm","signupData","onSignup","Menu","className","listStyle","setServiceId","serviceId","setSubService","onLogout","UserEdit","ServiceList","useState","serviceList","updateServiceList","useEffect","a","window","fetch","serverAddress","mode","headers","Authorization","token","serviceData","ok","json","serviceDataParsed","map","service","key","console","log","fetchServiceList","DataRow","row","keys","colName","push","onDoubleClick","onRowClick","data","DropDownField","options","optionList","element","entry","defaultValue","BoolField","checked","TextField","size","statuses","typesFallback","Map","min","EditRow","formData","dataPoint","types","changeHandler","newFormData","field","setValue","getValue","get","onHandleEdit","formFields","Ele","onBlur","relatedTarget","Filters","filters","filterMap","onFilterChange","DataView","sortMap","columns","entries","columnName","set","dataMap","forEach","dataObj","newObj","Object","has","editFocus","handleFilter","handleEdit","handleDataRow","sortKey","table","values","sort","b","newFilterMap","changedFilter","parentNode","newDataMap","Array","from","filter","titleRow","handleSort","rows","Levels","levelList","setLevelList","levelColumns","levelData","levelDataParsed","getLevelList","Patrons","patronList","setPatronList","patronColumns","patronMap","patronDataRaw","patronDataParsed","getPatronList","Todos","todoList","setTodoList","todoColumns","todoMap","recievedData","todoDataParsed","getTodoList","Service","subServiceComponent","setComponent","loadingState","setLoadingState","useLayoutEffect","subService","handleGenerate","margin","UserPanel","ServiceId","App","userStates","userState","handleUserState","handleLogin","handleSignup","method","body","JSON","stringify","then","res","status","catch","handlePage","ReactDOM","render","StrictMode","process","REACT_APP_SERVER_URI","document","getElementById"],"mappings":"qUAKMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANF,E,yDASNC,GACZA,EAAMC,iBACN,IAAMC,EAAS,eAAQC,KAAKR,OAC5BQ,KAAKT,MAAMU,QAAQF,K,mCAGPF,GACZG,KAAKE,SAAL,eAAiBL,EAAMM,OAAOC,GAAKP,EAAMM,OAAOE,U,wCAG/BC,GACjB,GAAIA,EACF,OAAO,yBAAKC,MAAO,CAAEC,MAAO,QAArB,gC,+BAIA,IAAD,OACR,OACE,6BACGR,KAAKS,kBAAkBT,KAAKT,MAAMe,aACnC,0BAAMI,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,KACvC,6BACE,2BAAOE,QAAQ,QAAf,SAEE,2BACEC,KAAK,QACLV,GAAG,QACHW,KAAK,QACLV,MAAOL,KAAKR,MAAMC,MAClBuB,SAAUhB,KAAKL,iBAIrB,6BACE,2BAAOkB,QAAQ,QAAf,YAEE,2BACEC,KAAK,WACLV,GAAG,WACHW,KAAK,WACLV,MAAOL,KAAKR,MAAME,SAClBsB,SAAUhB,KAAKL,iBAIrB,2BAAOoB,KAAK,SAASV,MAAM,YAE7B,4BAAQY,QAAS,kBAAM,EAAK1B,MAAM2B,cAAc,KAAhD,gB,GAzDgBC,IAAMC,WCAxBC,E,kDACJ,WAAa9B,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXsB,KAAM,GACNrB,MAAO,GACPC,SAAU,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPF,E,yDAUNC,GACZG,KAAKE,SAAL,eAAiBL,EAAMM,OAAOC,GAAKP,EAAMM,OAAOE,U,mCAGpCR,GACZA,EAAMC,iBACN,IAAMwB,EAAU,eAAQtB,KAAKR,OAC7BQ,KAAKT,MAAMgC,SAASD,K,+BAGX,IAAD,OACR,OACE,6BACE,wCACA,0BAAMZ,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,KACvC,2BAAOE,QAAQ,QAAf,aAEE,2BACEC,KAAK,OACLV,GAAG,OACHW,KAAK,OACLV,MAAOL,KAAKR,MAAMsB,KAClBE,SAAUhB,KAAKL,gBAGnB,2BAAOkB,QAAQ,SAAf,UAEE,2BACEC,KAAK,QACLV,GAAG,QACHW,KAAK,QACLV,MAAOL,KAAKR,MAAMC,MAClBuB,SAAUhB,KAAKL,gBAGnB,2BAAOkB,QAAQ,YAAf,YAEE,2BACEC,KAAK,WACLV,GAAG,WACHW,KAAK,WACLV,MAAOL,KAAKR,MAAME,SAClBsB,SAAUhB,KAAKL,gBAGnB,2BAAOoB,KAAK,SAASV,MAAM,aAE7B,4BAAQY,QAAS,kBAAM,EAAK1B,MAAM2B,cAAc,KAAhD,c,GA1DiBC,IAAMC,W,OCH/B,SAASI,EAAMjC,GACb,OACE,yBAAKkC,UAAU,QACb,wBAAIlB,MAAO,CAAEmB,UAAW,SACtB,wBAAIT,QAAS,kBAAM1B,EAAMoC,aAAa,KAAtC,iBAGA,wBAAIV,QAAS,kBAAM1B,EAAMoC,cAAc,KAAvC,aAIGpC,EAAMqC,UAAY,EAEf,oCACE,wBAAIX,QAAS,kBAAM1B,EAAMsC,cAAc,KAAvC,gBAGA,wBAAIZ,QAAS,kBAAM1B,EAAMsC,cAAc,KAAvC,UAGA,wBAAIZ,QAAS,kBAAM1B,EAAMsC,cAAc,KAAvC,WAGA,wBAAIZ,QAAS,kBAAM1B,EAAMsC,cAAc,KAAvC,UAKF,6BAEN,wBAAIZ,QAAS,kBAAM1B,EAAMuC,SAAS,KAAlC,YC9BR,SAASC,EAAUxC,GACjB,OACE,0C,2BCFJ,SAASyC,EAAazC,GAAQ,IAAD,EACc4B,IAAMc,SAAS,IAD7B,mBACpBC,EADoB,KACPC,EADO,KAgC3B,OA7BAhB,IAAMiB,WAAU,WAAM,4CACpB,WAAiC7C,GAAjC,mBAAA8C,EAAA,6DACMH,EAAc,GADpB,SAE4BI,OAAOC,MAAP,UAAgBhD,EAAMiD,cAAtB,aAAgD,CACxEC,KAAM,OACNC,QAAS,CACPC,cAAc,UAAD,OAAYpD,EAAMqD,UALrC,YAEQC,EAFR,QASkBC,GATlB,gCAUoCD,EAAYE,OAVhD,OAUUC,EAVV,OAWId,EAAcc,EAAkBC,KAAI,SAAAC,GAClC,OACE,wBACEC,IAAKD,EAAQ9C,GACba,QAAS,kBAAM1B,EAAMoC,aAAauB,EAAQ9C,MAEzC8C,EAAQpC,SAjBnB,OAsBEqB,EAAkBD,GAtBpB,6CADoB,sBAyBpBkB,QAAQC,IAAI,sBAzBS,SAAD,2BA0BpBC,CAAiB/D,KAChB,CAACA,IAGF,6BACE,2CACA,wBAAIgB,MAAO,CAAEmB,UAAW,SACrBQ,I,yBCpCT,SAASqB,EAAShE,GAChB,IADuB,EACjBiE,EAAM,GADW,cAEDjE,EAAMkE,MAFL,IAEvB,2BAAkC,CAAC,IAAxBC,EAAuB,QAChCF,EAAIG,KACF,yBACElC,UAAU,YACV0B,IAAKO,EACLE,cAAe,SAACjD,GAAD,OAAOpB,EAAMsE,WAAWlD,EAAGpB,EAAMuE,QAHlD,UAKMvE,EAAMuE,KAAKJ,OATE,8BAcvB,OACE,yBAAKjC,UAAU,YACZ+B,GChBP,SAASO,EAAexE,GACtB,IAAMyE,EAAUzE,EAAM0E,WAAWhB,KAAI,SAAAiB,GACnC,OACE,4BACEf,IAAKe,EACL7D,MAAO6D,GAENA,MAKP,OACE,0BAAMzC,UAAU,aACd,4BACErB,GAAIb,EAAM4E,MAAM,GAChBrD,KAAMvB,EAAM4E,MAAM,GAClBC,aAAc7E,EAAM4E,MAAM,GAC1BnD,SAAU,SAAAL,GAAC,OAAIpB,EAAMI,aAAagB,KAEjCqD,IAMT,SAASK,EAAW9E,GAClB,OACE,0BAAMkC,UAAU,aACd,2BACEV,KAAK,WACLX,GAAIb,EAAM4E,MAAM,GAChBrD,KAAMvB,EAAM4E,MAAM,GAElBG,QAAS/E,EAAM4E,MAAM,GACrBnD,SAAU,SAACL,GAAD,OAAOpB,EAAMI,aAAagB,OAM5C,SAAS4D,EAAWhF,GAClB,OACE,0BAAMkC,UAAU,aACd,2BACErB,GAAIb,EAAM4E,MAAM,GAChBrD,KAAMvB,EAAM4E,MAAM,GAClBK,KAAM,GACNnE,MAAOd,EAAM4E,MAAM,IAAM,GACzBnD,SAAU,SAACL,GAAD,OAAOpB,EAAMI,aAAagB,OC/C5C,IAAM8D,EAAW,CAAC,OAAQ,eAAgB,cAAe,OACnDC,EAAgB,IAAIC,IAAI,CAC5B,CAAC,OAAQJ,GACT,CAAC,SAAUF,GACX,CAAC,QDiDH,SAAsB9E,GACpB,OACE,0BAAMkC,UAAU,aACd,2BACErB,GAAIb,EAAM4E,MAAM,GAChBrD,KAAMvB,EAAM4E,MAAM,GAClBpD,KAAK,SACL6D,IAAK,EACLvE,MAAOd,EAAM4E,MAAM,GACnBnD,SAAU,SAACL,GAAD,OAAOpB,EAAMI,aAAagB,SCzD1C,CAAC,SAAUoD,KAGPc,E,kDACJ,WAAatF,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXsF,SAAUvF,EAAMwF,WAElB,EAAKC,MAASzF,EAAMyF,OAASN,EAE7B,EAAKO,cAAgB,EAAKA,cAAcrF,KAAnB,gBAPH,E,0DAULe,GAEb,IAAMuE,EAAclF,KAAKR,MAAMsF,SAC/BI,EAAYvE,EAAER,OAAOC,ID8CzB,SAAmBD,EAAQgF,GACzB,IAAIC,EAAW,KACf,OAAQD,GACN,KAAMd,EACJe,EAAWjF,EAAOmE,QAClB,MACF,QACEc,EAAWjF,EAAOE,MAGtB,OADA+C,QAAQC,IAAI+B,GACLA,ECxDsBC,CAAS1E,EAAER,OAAQH,KAAKgF,MAAMM,IAAI3E,EAAER,OAAOC,KACtEJ,KAAKE,SAAS,CAAE4E,SAAUI,M,mCAGdvE,GACZA,EAAEb,iBACFE,KAAKT,MAAMgG,aAAavF,KAAKR,MAAMsF,Y,+BAG1B,IAAD,OACFU,EAAaxF,KAAKT,MAAMkE,KAAKR,KAAI,SAAAE,GACrC,IAAMgB,EAAQ,EAAK3E,MAAMsF,SAAS3B,GAC5BsC,EAAM,EAAKT,MAAMM,IAAInC,GAC3B,OAAIsC,EAEA,kBAACA,EAAD,CACEtC,IAAKA,EACLgB,MAAO,CAAChB,EAAKgB,GACbF,WAAY,EAAK1E,MAAMyE,SAAWS,EAClC9E,aAAc,EAAKsF,gBAKrB,yBACExD,UAAU,YACV0B,IAAKA,GAEJgB,MAMT,OACE,0BACEzD,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,IACnCc,UAAU,WACViE,OAAQ,SAAC/E,GACiB,OAApBA,EAAEgF,eAAwB,EAAK/E,aAAaD,KAGjD6E,O,GAxDarE,IAAMC,WCV5B,SAASwE,EAASrG,GAChB,IADuB,EACjBsG,EAAU,GADO,cAEHtG,EAAMuG,WAFH,yBAEZ3B,EAFY,QAGrB0B,EAAQlC,KACN,yBACElC,UAAU,eACV0B,IAAKgB,EAAM,IAEX,2BACEpD,KAAK,WACLX,GAAI+D,EAAM,GACVG,QAASH,EAAM,GAAG,GAClBnD,SAAU,kBAAMzB,EAAMwG,eAAe5B,EAAM,OAE7C,2BAAOtD,QAASsD,EAAM,IAAKA,EAAM,GAAG,OAZ1C,2BAAsC,IAFf,8BAkBvB,OACE,6BACG0B,G,IChBDG,E,kDACJ,WAAazG,GAAQ,IAAD,sBAClB,cAAMA,GACN,IAFkB,EAEZ0G,EAAU,IAAItB,IAFF,cAGepF,EAAM2G,QAAQC,WAH7B,IAGlB,2BAA0D,CAAC,IAAD,yBAA9CrF,EAA8C,KAAxCsF,EAAwC,KAExDH,EAAQI,IAAIvF,EAAM,CAACsF,GAAY,GAAM,KALrB,8BAOlB,IAAME,EAAU,IAAI3B,IAPF,OAQlB,EAAKpF,MAAMuE,KAAKyC,SAAQ,SAAAC,GAEtB,IADA,IAAMC,EAAS,GACf,MAAoBC,OAAOP,QAAQK,GAAnC,eAA6C,CAAxC,IAAMrC,EAAK,KACV8B,EAAQU,IAAIxC,EAAM,MACpBsC,EAAOtC,EAAM,IAAMA,EAAM,IAG7BmC,EAAQD,IAAIG,EAAQpG,GAAIqG,MAE1B,EAAKzB,MAAS,EAAKzF,MAAMyF,OAAS,KAClC,EAAKxF,MAAQ,CACXoH,WAAY,EACZX,QAASA,EACTK,QAASA,GAEX,EAAKO,aAAe,EAAKA,aAAajH,KAAlB,gBACpB,EAAKkH,WAAa,EAAKA,WAAWlH,KAAhB,gBAClB,EAAKmH,cAAgB,EAAKA,cAAcnH,KAAnB,gBAzBH,E,uDA4BRuD,GACV,IAAM8C,EAAU,IAAItB,IAAI3E,KAAKR,MAAMyG,SAC7Be,EAAUf,EAAQX,IAAInC,GACtB8D,EAAQ,YAAIjH,KAAKR,MAAM8G,QAAQY,UAAUC,MAAK,SAAC9E,EAAG+E,GACtD,OAAI/E,EAAEc,KAASiE,EAAEjE,GAAa,EACtB6D,EAAQ,GACX3E,EAAEc,GAAOiE,EAAEjE,GAAQ,GAAK,EACxBd,EAAEc,GAAOiE,EAAEjE,GAAQ,GAAK,KAEzBmD,EAAU,IAAI3B,IACpBsC,EAAMV,SAAQ,SAAAC,GAAO,OAAIF,EAAQD,IAAIG,EAAQpG,GAAIoG,MACjDQ,EAAQ,IAAMA,EAAQ,GACtBf,EAAQI,IAAIlD,EAAK6D,GACjBhH,KAAKE,SAAS,CACZoG,QAASA,EACTL,QAASA,M,mCAICnF,GACZ,IAAMuG,EAAe,IAAI1C,IAAI3E,KAAKR,MAAMyG,SAClCqB,EAAgBD,EAAa/B,IAAIxE,GACvCwG,EAAc,IAAMA,EAAc,GAClCD,EAAahB,IAAIvF,EAAMwG,GACvBtH,KAAKE,SAAS,CAAE+F,QAASoB,M,oCAGZxH,EAAO2G,GACpBpD,QAAQC,IAAIxD,EAAMM,QAClBiD,QAAQC,IAAIxD,EAAMM,OAAOoH,YACzBnE,QAAQC,IAAImD,GACZxG,KAAKE,SAAS,CAAE0G,UAAWJ,EAAQpG,O,iCAGzB0D,GACVV,QAAQC,IAAIS,GACZ,IAAM0D,EAAa,IAAI7C,IAAI3E,KAAKR,MAAM8G,SACtCkB,EAAWnB,IAAIrG,KAAKR,MAAMoH,UAAW9C,GACrC9D,KAAKE,SAAS,CAAE0G,WAAY,EAAGN,QAASkB,M,+BAG/B,IAAD,WACgCxH,KAAKR,MAArC8G,EADA,EACAA,QAASL,EADT,EACSA,QAASW,EADlB,EACkBA,UACpBnD,EAAOgE,MAAMC,KAAKzB,EAAQxC,QAC7BkE,QAAO,SAAAxE,GAAG,OAAI8C,EAAQX,IAAInC,GAAK,MAC5ByE,EAAWnE,EAAKR,KAAI,SAAAE,GAAG,OAC3B,yBACE1B,UAAU,mBACV0B,IAAKA,EACLlC,QAAS,kBAAM,EAAK4G,WAAW1E,KAE9B8C,EAAQX,IAAInC,GAAK,OAIhB2E,EAAO,GAdL,cAeYxB,GAfZ,IAeR,2BAA6B,CAAC,IAAnBnC,EAAkB,QAC1BA,EAAM,KAAOyC,EACVkB,EAAKnE,KACL,kBAAC,EAAD,CACER,IAAKgB,EAAM,GACXY,UAAWZ,EAAM,GACjBV,KAAMA,EACN8B,aAAcvF,KAAK8G,WACnB9B,MAAOhF,KAAKgF,SAGd8C,EAAKnE,KACL,kBAACJ,EAAD,CACEJ,IAAKgB,EAAM,GACXL,KAAMK,EAAM,GACZV,KAAMA,EACNI,WAAY7D,KAAK+G,kBA/BjB,8BAoCR,OACE,oCACE,6BACE,kBAACnB,EAAD,CACEE,UAAW9F,KAAKR,MAAMyG,QACtBF,eAAgB/F,KAAK6G,gBAGzB,yBAAKpF,UAAU,cACb,yBAAKA,UAAU,YACZmG,GAEFE,Q,GAtHY3G,IAAMC,WCA7B,SAAS2G,EAAQxI,GAAQ,IAAD,EACY4B,IAAMc,SAAS,MAD3B,mBACf+F,EADe,KACJC,EADI,KAEhBC,EAAe,IAAIvD,IAAI,CAC3B,CAAC,KAAM,MACP,CAAC,OAAQ,SACT,CAAC,QAAS,SACV,CAAC,SAAU,UACX,CAAC,QAAS,aACV,CAAC,aAAc,gBACf,CAAC,OAAQ,eACT,CAAC,QAAS,SACV,CAAC,YAAa,qBAqBhB,OAlBAxD,IAAMiB,WAAU,WAAM,4CACpB,8BAAAC,EAAA,sEAC0BC,OAAOC,MAAP,UACnBhD,EAAMiD,cADa,qBACajD,EAAMqC,UADnB,WACuC,CAC3Da,KAAM,OACNC,QAAS,CACPC,cAAc,UAAD,OAAYpD,EAAMqD,UALvC,YACQuF,EADR,QASgBrF,GAThB,gCAUkCqF,EAAUpF,OAV5C,OAUUqF,EAVV,OAWIH,EAAaG,GAXjB,4CADoB,uBAAC,WAAD,wBAepBC,KACC,CAAC9I,IAGF,6BAEKyI,EACG,kBAAC,EAAD,CACAlE,KAAMkE,EACN9B,QAASgC,IAER,uDCzCb,SAASI,EAAS/I,GAAQ,IAAD,EACa4B,IAAMc,SAAS,MAD5B,mBAChBsG,EADgB,KACJC,EADI,KAEjBC,EAAgB,IAAI9D,IAAI,CAC5B,CAAC,KAAM,MACP,CAAC,cAAe,SAChB,CAAC,eAAgB,SACjB,CAAC,SAAU,WACX,CAAC,gBAAiB,kBAClB,CAAC,QAAS,SACV,CAAC,YAAa,qBAEV+D,EAAY,IAAI/D,IAAI,CACxB,CAAC,SAAUN,GACX,CAAC,QAASE,GACV,CAAC,cAAeA,KAqBlB,OAlBApD,IAAMiB,WAAU,WAAM,4CACpB,8BAAAC,EAAA,sEAC8BC,OAAOC,MAAP,UACvBhD,EAAMiD,cADiB,qBACSjD,EAAMqC,UADf,oBAC4C,CACpEa,KAAM,OACNC,QAAS,CACPC,cAAc,UAAD,OAAYpD,EAAMqD,UALvC,YACQ+F,EADR,QASoB7F,GATpB,gCAUmC6F,EAAc5F,OAVjD,OAUU6F,EAVV,OAWIJ,EAAcI,GAXlB,4CADoB,uBAAC,WAAD,wBAepBC,KACC,CAACtJ,IAGF,6BAEKgJ,EAEG,kBAAC,EAAD,CACEzE,KAAMyE,EACNvD,MAAO0D,EACPxC,QAASuC,IAGV,wDC9Cb,SAASK,EAAOvJ,GAAQ,IAAD,EACW4B,IAAMc,SAAS,MAD1B,mBACd8G,EADc,KACJC,EADI,KAEfC,EAAc,IAAItE,IAAI,CAC1B,CAAC,KAAM,MACP,CAAC,YAAa,mBACd,CAAC,8BAA+B,UAChC,CAAC,+BAAgC,SACjC,CAAC,cAAe,WAChB,CAAC,wBAAyB,WAC1B,CAAC,SAAU,YAEPuE,EAAU,IAAIvE,IAAI,CACtB,CAAC,SAAUZ,GACX,CAAC,wBAAyBQ,GAC1B,CAAC,SAAUA,KAqBb,OAlBApD,IAAMiB,WAAU,WAAM,4CACpB,8BAAAC,EAAA,sEAC6BC,OAAOC,MAAP,UACtBhD,EAAMiD,cADgB,qBACUjD,EAAMqC,UADhB,YACqC,CAC5Da,KAAM,OACNC,QAAS,CACPC,cAAc,UAAD,OAAYpD,EAAMqD,UALvC,YACQuG,EADR,QASmBrG,GATnB,gCAUiCqG,EAAapG,OAV9C,OAUUqG,EAVV,OAWIJ,EAAYI,GAXhB,4CADoB,uBAAC,WAAD,wBAepBC,KACC,CAAC9J,IAGF,6BAEKwJ,EAEG,kBAAC,EAAD,CACEjF,KAAMiF,EACN/D,MAAOkE,EACPhD,QAAS+C,IAGV,wDC5Cb,SAASK,EAAS/J,GAAQ,IAAD,EAErB4B,IAAMc,SAAS,kDAFM,mBAChBsH,EADgB,KACKC,EADL,OAGiBrI,IAAMc,SAAS,kBAHhC,mBAGhBwH,EAHgB,KAGFC,EAHE,KA4DvB,OAvDAvI,IAAMwI,iBAAgB,WAAM,4CAC1B,WAA+BhJ,GAA/B,SAAA0B,EAAA,6DACEqH,EAAgB,iBADlB,SAEoBpH,OAAOC,MAAP,UACbhD,EAAMiD,cADO,qBACmBjD,EAAMqC,UADzB,aAC+C,CAC7Da,KAAM,OACNC,QAAS,CACPC,cAAc,UAAD,OAAYpD,EAAMqD,UANvC,cAUUE,KACN4G,EAAgB,kBAChBtG,QAAQC,IAAI,yBAZhB,4CAD0B,sBAiB1B,OAAQ9D,EAAMqK,YACZ,KAAM,EACJJ,EACE,kBAACzB,EAAD,CACEnG,UAAWrC,EAAMqC,UACjBgB,MAAOrD,EAAMqD,MACbJ,cAAejD,EAAMiD,iBAGzB,MACF,KAAM,EACJgH,EACE,kBAAClB,EAAD,CACE1G,UAAWrC,EAAMqC,UACjBgB,MAAOrD,EAAMqD,MACbJ,cAAejD,EAAMiD,iBAGzB,MACF,KAAM,EACJgH,EACE,kBAACV,EAAD,CACElH,UAAWrC,EAAMqC,UACjBgB,MAAOrD,EAAMqD,MACbJ,cAAejD,EAAMiD,iBAGzB,MACF,QACEgH,EACE,6BACE,6CACA,4BAAQvI,QAAS,SAACN,GAAD,OAjDE,SAAD,kCAiDMkJ,CAAelJ,KAAK8I,QAInD,CAAClK,EAAOkK,IAGT,6BACE,0BAAMlJ,MAAO,CAAEuJ,OAAQ,SAAvB,cAA6CvK,EAAMqC,WAClD2H,GCvDP,SAASQ,EAAWxK,GAAQ,IAAD,EACS4B,IAAMc,SAAS,GADxB,mBAClB+H,EADkB,KACPrI,EADO,OAEWR,IAAMc,SAAS,GAF1B,mBAElB2H,EAFkB,KAEN/H,EAFM,KAIzB,OACE,yBAAKJ,UAAU,cACb,kBAACD,EAAD,CACEI,UAAWoI,EACXrI,aAAcA,EACdE,cAAeA,EACfC,SAAUvC,EAAM2B,gBAGf8I,EAAY,EAET,kBAACV,EAAD,CACE1H,UAAWoI,EACXJ,WAAYA,EACZpH,cAAejD,EAAMiD,cACrBI,MAAOrD,EAAMqD,SAGC,IAAfoH,EAEC,kBAACjI,EAAD,MAGA,kBAACC,EAAD,CACEQ,cAAejD,EAAMiD,cACrBI,MAAOrD,EAAMqD,MACbjB,aAAcA,K,ICrCxBsI,E,kDACJ,WAAa1K,GAAQ,IAAD,8BAClB,cAAMA,IACDiD,cAAgBjD,EAAMiD,cAC3B,EAAK0H,WAAa,CAAC,aAAc,YAAa,cAC9C,EAAK1K,MAAQ,CACX2K,UAAW,EACXvH,MAAO,KACPtC,aAAa,GAEf,EAAK8J,gBAAkB,EAAKA,gBAAgBxK,KAArB,gBACvB,EAAKyK,YAAc,EAAKA,YAAYzK,KAAjB,gBACnB,EAAK0K,aAAe,EAAKA,aAAa1K,KAAlB,gBAXF,E,uDAcRuK,GACV,OAAQA,GACN,KAAM,EACJ,OACE,kBAACJ,EAAD,CACEvH,cAAexC,KAAKwC,cACpBtB,cAAelB,KAAKoK,gBACpBxH,MAAO5C,KAAKR,MAAMoD,QAGxB,KAAM,EACJ,OACE,kBAAC,EAAD,CACE1B,cAAelB,KAAKoK,gBACpB7I,SAAUvB,KAAKsK,eAGrB,QACE,OACE,kBAAC,EAAD,CACEpJ,cAAelB,KAAKoK,gBACpBnK,QAASD,KAAKqK,YACd/J,YAAaN,KAAKR,MAAMc,iB,sCAOjB6J,GACXA,IAAcnK,KAAKR,MAAM2K,YACT,IAAdA,EACFnK,KAAKE,SAAS,CAAEiK,cAEhBnK,KAAKE,SAAS,CACZiK,YACAvH,MAAO,U,kCAMF7C,GAAY,IAAD,OACtBuC,OAAOC,MAAP,UAAgBvC,KAAKwC,cAArB,UAA4C,CAC1C+H,OAAQ,OACR9H,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElB8H,KAAMC,KAAKC,UAAU3K,KAEpB4K,MAAK,SAAAC,GACJ,OAAIA,EAAIC,OAAS,IACRD,EAAI7H,QAEX,EAAK7C,SAAS,CACZiK,UAAW,EACX7J,aAAa,IAER,oBAGVqK,MAAK,SAAA7G,GACAA,EAAKlB,OACP,EAAK1C,SAAS,CACZ0C,MAAOkB,EAAKlB,MACZuH,UAAW,EACX7J,aAAa,OAIlBwK,OAAM,SAAAnK,GAAC,OAAIyC,QAAQC,IAAI1C,Q,mCAGdW,GAAa,IAAD,OACxBgB,OAAOC,MAAP,UAAgBvC,KAAKwC,cAArB,WAA6C,CAC3C+H,OAAQ,OACR9H,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElB8H,KAAMC,KAAKC,UAAUpJ,KAEpBqJ,MAAK,SAAAC,GACJ,OAAIA,EAAIC,OAAS,IACRD,EAAI7H,OAEJ,mBAGV4H,MAAK,SAAA7G,GAGJ,OAFAV,QAAQC,IAAIS,GACZ,EAAK5D,SAAS,CAAEiK,UAAW,IACpB,wBAERW,OAAM,SAAAnK,GAAC,OAAIyC,QAAQC,IAAI1C,Q,+BAI1B,OACE,yBAAKP,GAAG,OACN,+CACkBJ,KAAKkK,WAAWlK,KAAKR,MAAM2K,YAE5CnK,KAAK+K,WAAW/K,KAAKR,MAAM2K,gB,GAvHlBhJ,IAAMC,WCHxB4J,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CACE1I,cACG2I,uIAAYC,sBAAwB,2BAI3CC,SAASC,eAAe,W","file":"static/js/main.efaea6ab.chunk.js","sourcesContent":["// email, pass\r\n// return: { user, token }\r\n\r\nimport React from 'react';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    event.preventDefault();\r\n    const loginData = { ...this.state };\r\n    this.props.onLogin(loginData);\r\n  }\r\n\r\n  handleChange (event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  handleFailedLogin (failedLogin) {\r\n    if (failedLogin) {\r\n      return <div style={{ color: 'red' }}>Invalid email or password!</div>;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.handleFailedLogin(this.props.failedLogin)}\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label htmlFor='mail'>\r\n              email:\r\n              <input\r\n                name='email'\r\n                id='email'\r\n                type='email'\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label htmlFor='pass'>\r\n              password:\r\n              <input\r\n                name='password'\r\n                id='password'\r\n                type='password'\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <input type='submit' value='Log in' />\r\n        </form>\r\n        <button onClick={() => this.props.onStateChange(2)}>Sign up</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { LoginForm };\r\n","// name email pass\r\n// return user: { email, name }\r\n\r\nimport React from 'react';\r\n\r\nclass SignupForm extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange (event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    event.preventDefault();\r\n    const signupData = { ...this.state };\r\n    this.props.onSignup(signupData);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div>Sign up</div>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <label htmlFor='name'>\r\n            User name:\r\n            <input\r\n              name='name'\r\n              id='name'\r\n              type='text'\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor='email'>\r\n            e-mail:\r\n            <input\r\n              name='email'\r\n              id='email'\r\n              type='email'\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor='password'>\r\n            password:\r\n            <input\r\n              name='password'\r\n              id='password'\r\n              type='password'\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <input type='submit' value='Sign Up' />\r\n        </form>\r\n        <button onClick={() => this.props.onStateChange(0)}>Login</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { SignupForm };\r\n","import React from 'react';\r\n\r\nfunction Menu (props) {\r\n  return (\r\n    <nav className='menu'>\r\n      <ul style={{ listStyle: 'none' }}>\r\n        <li onClick={() => props.setServiceId(0)}>\r\n          Services list\r\n        </li>\r\n        <li onClick={() => props.setServiceId(-1)}>\r\n          Edit user\r\n        </li>\r\n        {\r\n          (props.serviceId > 0)\r\n            ? (\r\n              <>\r\n                <li onClick={() => props.setSubService(0)}>\r\n                  Service info\r\n                </li>\r\n                <li onClick={() => props.setSubService(1)}>\r\n                  Levels\r\n                </li>\r\n                <li onClick={() => props.setSubService(2)}>\r\n                  Patrons\r\n                </li>\r\n                <li onClick={() => props.setSubService(3)}>\r\n                  To Do\r\n                </li>\r\n              </>\r\n            )\r\n            : <br />\r\n        }\r\n        <li onClick={() => props.onLogout(0)}>\r\n          Logout\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { Menu };\r\n","import React from 'react';\r\n\r\nfunction UserEdit (props) {\r\n  return (\r\n    <div>\r\n      User Edit\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { UserEdit };\r\n","import React from 'react';\r\n\r\nfunction ServiceList (props) {\r\n  const [serviceList, updateServiceList] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    async function fetchServiceList (props) {\r\n      let serviceList = [];\r\n      const serviceData = await window.fetch(`${props.serverAddress}/services`, {\r\n        mode: 'cors',\r\n        headers: {\r\n          Authorization: `Bearer ${props.token}`\r\n        }\r\n      });\r\n\r\n      if (serviceData.ok) {\r\n        const serviceDataParsed = await serviceData.json();\r\n        serviceList = serviceDataParsed.map(service => {\r\n          return (\r\n            <li\r\n              key={service.id}\r\n              onClick={() => props.setServiceId(service.id)}\r\n            >\r\n              {service.name}\r\n            </li>\r\n          );\r\n        });\r\n      }\r\n      updateServiceList(serviceList);\r\n    }\r\n    console.log('serviceList render');\r\n    fetchServiceList(props);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Service List</p>\r\n      <ul style={{ listStyle: 'none' }}>\r\n        {serviceList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ServiceList };\r\n","import React from 'react';\r\n\r\nfunction DataRow (props) {\r\n  const row = [];\r\n  for (const colName of props.keys) {\r\n    row.push(\r\n      <div\r\n        className='data-cell'\r\n        key={colName}\r\n        onDoubleClick={(e) => props.onRowClick(e, props.data)}\r\n      >\r\n        {`${props.data[colName]}`}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='data-row'>\r\n      {row}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { DataRow };\r\n","import React from 'react';\r\n\r\nfunction DropDownField (props) {\r\n  const options = props.optionList.map(element => {\r\n    return (\r\n      <option\r\n        key={element}\r\n        value={element}\r\n      >\r\n        {element}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <span className='data-cell'>\r\n      <select\r\n        id={props.entry[0]}\r\n        name={props.entry[0]}\r\n        defaultValue={props.entry[1]}\r\n        onChange={e => props.handleChange(e)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction BoolField (props) {\r\n  return (\r\n    <span className='data-cell'>\r\n      <input\r\n        type='checkbox'\r\n        id={props.entry[0]}\r\n        name={props.entry[0]}\r\n        // data needs parsing on state\r\n        checked={props.entry[1]}\r\n        onChange={(e) => props.handleChange(e)}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction TextField (props) {\r\n  return (\r\n    <span className='data-cell'>\r\n      <input\r\n        id={props.entry[0]}\r\n        name={props.entry[0]}\r\n        size={16}\r\n        value={props.entry[1] || ''}\r\n        onChange={(e) => props.handleChange(e)}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction NumberField (props) {\r\n  return (\r\n    <span className='data-cell'>\r\n      <input\r\n        id={props.entry[0]}\r\n        name={props.entry[0]}\r\n        type='number'\r\n        min={0}\r\n        value={props.entry[1]}\r\n        onChange={(e) => props.handleChange(e)}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction getValue (target, field) {\r\n  let setValue = null;\r\n  switch (field) {\r\n    case (BoolField):\r\n      setValue = target.checked;\r\n      break;\r\n    default:\r\n      setValue = target.value;\r\n  }\r\n  console.log(setValue);\r\n  return setValue;\r\n}\r\n\r\nexport {\r\n  DropDownField,\r\n  BoolField,\r\n  TextField,\r\n  NumberField,\r\n  getValue\r\n};\r\n","import React from 'react';\r\nimport { DropDownField, BoolField, TextField, NumberField, getValue }\r\n  from './formFieldTypes';\r\n\r\nconst statuses = ['done', 'for shipment', 'in progress', 'new'];\r\nconst typesFallback = new Map([\r\n  ['user', TextField],\r\n  ['active', BoolField],\r\n  ['value', NumberField],\r\n  ['status', DropDownField]\r\n]);\r\n\r\nclass EditRow extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: props.dataPoint\r\n    };\r\n    this.types = (props.types || typesFallback);\r\n\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n  }\r\n\r\n  changeHandler (e) {\r\n    // console.log(`id:${e.target.id} val:${e.target.value}`);\r\n    const newFormData = this.state.formData;\r\n    newFormData[e.target.id] = getValue(e.target, this.types.get(e.target.id));\r\n    this.setState({ formData: newFormData });\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n    this.props.onHandleEdit(this.state.formData);\r\n  }\r\n\r\n  render () {\r\n    const formFields = this.props.keys.map(key => {\r\n      const entry = this.state.formData[key];\r\n      const Ele = this.types.get(key);\r\n      if (Ele) {\r\n        return (\r\n          <Ele\r\n            key={key}\r\n            entry={[key, entry]}\r\n            optionList={this.props.options || statuses}\r\n            handleChange={this.changeHandler}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <div\r\n            className='data-cell'\r\n            key={key}\r\n          >\r\n            {entry}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <form\r\n        onSubmit={(e) => this.handleSubmit(e)}\r\n        className='data-row'\r\n        onBlur={(e) => {\r\n          if (e.relatedTarget === null) this.handleSubmit(e);\r\n        }}\r\n      >\r\n        {formFields}\r\n        {/* <input type='submit' value='Save' className='data-cell' /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport { EditRow };\r\n","import React from 'react';\n\nfunction Filters (props) {\n  const filters = [];\n  for (const entry of props.filterMap) {\n    filters.push(\n      <div\n        className='filter-check'\n        key={entry[0]}\n      >\n        <input\n          type='checkbox'\n          id={entry[0]}\n          checked={entry[1][1]}\n          onChange={() => props.onFilterChange(entry[0])}\n        />\n        <label htmlFor={entry[0]}>{entry[1][0]}</label>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {filters}\n    </div>\n  );\n}\n\nexport { Filters };\n","import React from 'react';\r\nimport './dataView.css';\r\nimport { DataRow } from './dataRow';\r\nimport { EditRow } from './editRow';\r\nimport { Filters } from './filters';\r\n\r\nclass DataView extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    const sortMap = new Map();\r\n    for (const [name, columnName] of props.columns.entries()) {\r\n      // name: [column name, show, sort (true == asc)]\r\n      sortMap.set(name, [columnName, true, true]);\r\n    }\r\n    const dataMap = new Map();\r\n    this.props.data.forEach(dataObj => {\r\n      const newObj = {};\r\n      for (const entry of Object.entries(dataObj)) {\r\n        if (sortMap.has(entry[0])) {\r\n          newObj[entry[0]] = entry[1];\r\n        }\r\n      }\r\n      dataMap.set(dataObj.id, newObj);\r\n    });\r\n    this.types = (this.props.types || null);\r\n    this.state = {\r\n      editFocus: -1,\r\n      sortMap: sortMap,\r\n      dataMap: dataMap\r\n    };\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleDataRow = this.handleDataRow.bind(this);\r\n  }\r\n\r\n  handleSort (key) {\r\n    const sortMap = new Map(this.state.sortMap);\r\n    const sortKey = sortMap.get(key);\r\n    const table = [...this.state.dataMap.values()].sort((a, b) => {\r\n      if (a[key] === b[key]) return 0;\r\n      return (sortKey[2])\r\n        ? (a[key] > b[key]) ? 1 : -1\r\n        : (a[key] < b[key]) ? 1 : -1;\r\n    });\r\n    const dataMap = new Map();\r\n    table.forEach(dataObj => dataMap.set(dataObj.id, dataObj));\r\n    sortKey[2] = !sortKey[2];\r\n    sortMap.set(key, sortKey);\r\n    this.setState({\r\n      dataMap: dataMap,\r\n      sortMap: sortMap\r\n    });\r\n  }\r\n\r\n  handleFilter (name) {\r\n    const newFilterMap = new Map(this.state.sortMap);\r\n    const changedFilter = newFilterMap.get(name);\r\n    changedFilter[1] = !changedFilter[1];\r\n    newFilterMap.set(name, changedFilter);\r\n    this.setState({ sortMap: newFilterMap });\r\n  }\r\n\r\n  handleDataRow (event, dataObj) {\r\n    console.log(event.target);\r\n    console.log(event.target.parentNode);\r\n    console.log(dataObj);\r\n    this.setState({ editFocus: dataObj.id });\r\n  }\r\n\r\n  handleEdit (data) {\r\n    console.log(data);\r\n    const newDataMap = new Map(this.state.dataMap);\r\n    newDataMap.set(this.state.editFocus, data);\r\n    this.setState({ editFocus: -1, dataMap: newDataMap });\r\n  }\r\n\r\n  render () {\r\n    const { dataMap, sortMap, editFocus } = this.state;\r\n    const keys = Array.from(sortMap.keys())\r\n      .filter(key => sortMap.get(key)[1]);\r\n    const titleRow = keys.map(key => (\r\n      <div\r\n        className='data-header-cell'\r\n        key={key}\r\n        onClick={() => this.handleSort(key)}\r\n      >\r\n        {sortMap.get(key)[0]}\r\n      </div>\r\n    ));\r\n\r\n    const rows = [];\r\n    for (const entry of dataMap) {\r\n      (entry[0] === editFocus)\r\n        ? rows.push(\r\n          <EditRow\r\n            key={entry[0]}\r\n            dataPoint={entry[1]}\r\n            keys={keys}\r\n            onHandleEdit={this.handleEdit}\r\n            types={this.types}\r\n          />\r\n        )\r\n        : rows.push(\r\n          <DataRow\r\n            key={entry[0]}\r\n            data={entry[1]}\r\n            keys={keys}\r\n            onRowClick={this.handleDataRow}\r\n          />\r\n        );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Filters\r\n            filterMap={this.state.sortMap}\r\n            onFilterChange={this.handleFilter}\r\n          />\r\n        </div>\r\n        <div className='data-table'>\r\n          <div className='data-row'>\r\n            {titleRow}\r\n          </div>\r\n          {rows}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { DataView };\r\n","import React from 'react';\r\n\r\nimport { DataView } from '../components/tables/dataView';\r\n\r\n/** @props: serviceId, token, serverAddress */\r\n\r\nfunction Levels (props) {\r\n  const [levelList, setLevelList] = React.useState(null);\r\n  const levelColumns = new Map([\r\n    ['id', 'id'],\r\n    ['name', 'nazwa'],\r\n    ['value', 'kwota'],\r\n    ['cyclic', 'co ile'],\r\n    ['multi', 'dla wielu'],\r\n    ['individual', 'indywidualna'],\r\n    ['once', 'jednorazowa'],\r\n    ['limit', 'limit'],\r\n    ['updatedAt', 'ostatnia zmiana']\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    async function getLevelList () {\r\n      const levelData = await window.fetch(\r\n        `${props.serverAddress}/services/${props.serviceId}/levels`, {\r\n          mode: 'cors',\r\n          headers: {\r\n            Authorization: `Bearer ${props.token}`\r\n          }\r\n        }\r\n      );\r\n      if (levelData.ok) {\r\n        const levelDataParsed = await levelData.json();\r\n        setLevelList(levelDataParsed);\r\n      }\r\n    }\r\n    getLevelList();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (levelList)\r\n          ? <DataView\r\n            data={levelList}\r\n            columns={levelColumns}\r\n          />\r\n          : (<div>Loading Level List...</div>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Levels };\r\n","import React from 'react';\r\n\r\nimport { DataView } from '../components/tables/dataView';\r\nimport { BoolField, TextField } from '../components/tables/formFieldTypes';\r\n\r\nfunction Patrons (props) {\r\n  const [patronList, setPatronList] = React.useState(null);\r\n  const patronColumns = new Map([\r\n    ['id', 'id'],\r\n    ['patron.name', 'nazwa'],\r\n    ['patron.email', 'email'],\r\n    ['active', 'aktywny'],\r\n    ['supportAmount', 'kwota wsparcia'],\r\n    ['notes', 'uwagi'],\r\n    ['updatedAt', 'ostatnia zmiana']\r\n  ]);\r\n  const patronMap = new Map([\r\n    ['active', BoolField],\r\n    ['notes', TextField],\r\n    ['patron.name', TextField]\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    async function getPatronList () {\r\n      const patronDataRaw = await window.fetch(\r\n        `${props.serverAddress}/services/${props.serviceId}/patrons/complex`, {\r\n          mode: 'cors',\r\n          headers: {\r\n            Authorization: `Bearer ${props.token}`\r\n          }\r\n        }\r\n      );\r\n      if (patronDataRaw.ok) {\r\n        const patronDataParsed = await patronDataRaw.json();\r\n        setPatronList(patronDataParsed);\r\n      }\r\n    }\r\n    getPatronList();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (patronList)\r\n          ? (\r\n            <DataView\r\n              data={patronList}\r\n              types={patronMap}\r\n              columns={patronColumns}\r\n            />\r\n          )\r\n          : (<div>Loading Patron List...</div>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Patrons };\r\n","import React from 'react';\r\n\r\nimport { DataView } from '../components/tables/dataView';\r\nimport { DropDownField, TextField } from '../components/tables/formFieldTypes';\r\n\r\nfunction Todos (props) {\r\n  const [todoList, setTodoList] = React.useState(null);\r\n  const todoColumns = new Map([\r\n    ['id', 'id'],\r\n    ['updatedAt', 'ostatnia zmiana'],\r\n    ['patronInService.patron.name', 'patron'],\r\n    ['patronInService.patron.email', 'email'],\r\n    ['reward.name', 'nagroda'],\r\n    ['patronInService.notes', 'notatki'],\r\n    ['status', 'status']\r\n  ]);\r\n  const todoMap = new Map([\r\n    ['status', DropDownField],\r\n    ['patronInService.notes', TextField],\r\n    ['reward', TextField]\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    async function getTodoList () {\r\n      const recievedData = await window.fetch(\r\n        `${props.serverAddress}/services/${props.serviceId}/complex`, {\r\n          mode: 'cors',\r\n          headers: {\r\n            Authorization: `Bearer ${props.token}`\r\n          }\r\n        }\r\n      );\r\n      if (recievedData.ok) {\r\n        const todoDataParsed = await recievedData.json();\r\n        setTodoList(todoDataParsed);\r\n      }\r\n    }\r\n    getTodoList();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (todoList)\r\n          ? (\r\n            <DataView\r\n              data={todoList}\r\n              types={todoMap}\r\n              columns={todoColumns}\r\n            />\r\n          )\r\n          : (<div>Loading Patron List...</div>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Todos };\r\n","import React from 'react';\r\n\r\nimport { Levels } from './levels';\r\nimport { Patrons } from './patrons';\r\nimport { Todos } from './todos';\r\n\r\n// TODO: add csv import button\r\nfunction Service (props) {\r\n  const [subServiceComponent, setComponent] =\r\n    React.useState(<p>Service not loaded</p>);\r\n  const [loadingState, setLoadingState] = React.useState('Generate Todos');\r\n\r\n  React.useLayoutEffect(() => {\r\n    async function handleGenerate (e) {\r\n      setLoadingState('Generating...');\r\n      const res = await window.fetch(\r\n        `${props.serverAddress}/services/${props.serviceId}/generate`, {\r\n          mode: 'cors',\r\n          headers: {\r\n            Authorization: `Bearer ${props.token}`\r\n          }\r\n        }\r\n      );\r\n      if (res.ok) {\r\n        setLoadingState('Generate Todos');\r\n        console.log('generate successfull');\r\n      }\r\n    }\r\n\r\n    switch (props.subService) {\r\n      case (1):\r\n        setComponent(\r\n          <Levels\r\n            serviceId={props.serviceId}\r\n            token={props.token}\r\n            serverAddress={props.serverAddress}\r\n          />\r\n        );\r\n        break;\r\n      case (2):\r\n        setComponent(\r\n          <Patrons\r\n            serviceId={props.serviceId}\r\n            token={props.token}\r\n            serverAddress={props.serverAddress}\r\n          />\r\n        );\r\n        break;\r\n      case (3):\r\n        setComponent(\r\n          <Todos\r\n            serviceId={props.serviceId}\r\n            token={props.token}\r\n            serverAddress={props.serverAddress}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        setComponent(\r\n          <div>\r\n            <div>Service Main</div>\r\n            <button onClick={(e) => handleGenerate(e)}>{loadingState}</button>\r\n          </div>\r\n        );\r\n    }\r\n  }, [props, loadingState]);\r\n\r\n  return (\r\n    <div>\r\n      <span style={{ margin: '15px' }}>service ID {props.serviceId}</span>\r\n      {subServiceComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Service };\r\n","import React from 'react';\r\n\r\nimport { Menu } from '../components/menu';\r\nimport { UserEdit } from './userEdit';\r\nimport { ServiceList } from './serviceList';\r\nimport { Service } from './service';\r\n\r\n/**\r\n * @TODO: should have\r\n *  - user services list\r\n *  - some link to todo list\r\n *  - way to edit logged user data\r\n *\r\n *  props: token, onStateChange\r\n */\r\nfunction UserPanel (props) {\r\n  const [ServiceId, setServiceId] = React.useState(0);\r\n  const [subService, setSubService] = React.useState(0);\r\n\r\n  return (\r\n    <div className='user-panel'>\r\n      <Menu\r\n        serviceId={ServiceId}\r\n        setServiceId={setServiceId}\r\n        setSubService={setSubService}\r\n        onLogout={props.onStateChange}\r\n      />\r\n      {\r\n        (ServiceId > 0)\r\n          ? (\r\n            <Service\r\n              serviceId={ServiceId}\r\n              subService={subService}\r\n              serverAddress={props.serverAddress}\r\n              token={props.token}\r\n            />\r\n          )\r\n          : (ServiceId === -1)\r\n            ? (\r\n              <UserEdit />\r\n            )\r\n            : (\r\n              <ServiceList\r\n                serverAddress={props.serverAddress}\r\n                token={props.token}\r\n                setServiceId={setServiceId}\r\n              />\r\n            )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { UserPanel };\r\n","import React from 'react';\r\n\r\nimport './app.css';\r\n// import DataView from './components/DataView';\r\nimport { LoginForm } from './components/loginForm';\r\nimport { SignupForm } from './components/signupForm';\r\nimport { UserPanel } from './pages/userPanel';\r\n\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.serverAddress = props.serverAddress;\r\n    this.userStates = ['logged out', 'logged in', 'signing up'];\r\n    this.state = {\r\n      userState: 0,\r\n      token: null,\r\n      failedLogin: false\r\n    };\r\n    this.handleUserState = this.handleUserState.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleSignup = this.handleSignup.bind(this);\r\n  }\r\n\r\n  handlePage (userState) {\r\n    switch (userState) {\r\n      case (1):\r\n        return (\r\n          <UserPanel\r\n            serverAddress={this.serverAddress}\r\n            onStateChange={this.handleUserState}\r\n            token={this.state.token}\r\n          />\r\n        );\r\n      case (2):\r\n        return (\r\n          <SignupForm\r\n            onStateChange={this.handleUserState}\r\n            onSignup={this.handleSignup}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <LoginForm\r\n            onStateChange={this.handleUserState}\r\n            onLogin={this.handleLogin}\r\n            failedLogin={this.state.failedLogin}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  // @param userState: index from userStates\r\n  handleUserState (userState) {\r\n    if (userState !== this.state.userState) {\r\n      if (userState === 2) {\r\n        this.setState({ userState });\r\n      } else {\r\n        this.setState({\r\n          userState,\r\n          token: null\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleLogin (loginData) {\r\n    window.fetch(`${this.serverAddress}/login`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(loginData)\r\n    })\r\n      .then(res => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          this.setState({\r\n            userState: 0,\r\n            failedLogin: true\r\n          });\r\n          return 'login failed!';\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.token) {\r\n          this.setState({\r\n            token: data.token,\r\n            userState: 1,\r\n            failedLogin: false\r\n          });\r\n        }\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  handleSignup (signupData) {\r\n    window.fetch(`${this.serverAddress}/signup`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(signupData)\r\n    })\r\n      .then(res => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          return 'signup failed';\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ userState: 0 });\r\n        return 'signup successfull';\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id='App'>\r\n        <div>\r\n          current state: {this.userStates[this.state.userState]}\r\n        </div>\r\n        {this.handlePage(this.state.userState)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { App };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App\r\n      serverAddress={\r\n        (process.env.REACT_APP_SERVER_URI || 'http://127.0.0.1:3000')\r\n      }\r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}